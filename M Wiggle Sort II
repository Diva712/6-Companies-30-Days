Given an integer array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....

You may assume the input array always has a valid answer.

 

Example 1:

Input: nums = [1,5,1,1,6,4]
Output: [1,6,1,5,1,4]
Explanation: [1,4,1,5,1,6] is also accepted.
Example 2:

Input: nums = [1,3,2,2,3,1]
Output: [2,3,1,3,1,2]

// wiggle means put the highest element in even place the put numbers in odd places.

Solution :

class Solution {
public:
    void wiggleSort(vector<int>& nums) {
        sort(nums.begin() , nums.end());
        int n = nums.size();
        int arr[n];

        int i = 1;
        int j = n-1;

        while(i<n){
            arr[i] = nums[j];
            j--;
            i=i+2;
        }

        i=0;
        while(i<n){
            arr[i] = nums[j];
            i=i+2;
            j--;
        }

        for(int i=0 ; i<n; i++){
            nums[i] = arr[i];
        }
    }
};
